#Tictactoe Game
#clear_output to clear board if used nxt time
from IPython.display import clear_output
import random

#dipslay board
def my_board(board):
        clear_output()
        print(board[7]+' | '+board[8]+' | '+board[9])
        print('---------')
        print(board[4]+' | '+board[5]+' | '+board[6])
        print('---------')
        print(board[1]+' | '+board[2]+' | '+board[3])
        

test_board=['']*10
my_board(test_board)
#my_board(test_board)

len(test_board)

def player(): 
    while True:
        p1=str(input('Player1:enter x or o '))
    
        if not (p1=='x' or p1=='o'):
            print('Player1:enter x or o')
            continue
        elif p1=='x':
            print('p1=x,p2=o')
            p2='o' #no need to write since p2 absorbs 'return' value only
            return ('x','o')
           
        elif p1=='o':
            print('p1=o,p2=x')
            p2='x'
            return ('o','x')
        

p1,p2=player()


p2

def place(board,mark,position):
    board[position]=mark

place(test_board,'a',3)
my_board(test_board)



def checkwin(board,mark):
    if (board[7]==board[8]==board[9]==p1):
        print('player 1 wins')
    elif (board[4]==board[8]==board[5]==p1):
        print('player 1 wins')
    elif (board[1]==board[2]==board[3]==p1):
        print('player 1 wins')
    elif (board[1]==board[4]==board[7]==p1):
        print('player 1 wins')
    elif (board[2]==board[5]==board[8]==p1):
        print('player 1 wins')
    elif (board[3]==board[6]==board[9]==p1):
        print('player 1 wins')
    elif (board[1]==board[5]==board[9]==p1):
        print('player 1 wins')
    elif (board[7]==board[5]==board[3]==p1):
        print('player 1 wins')
    elif (board[7]==board[8]==board[9]==p2):
        print('player 2 wins')
    elif(board[4]==board[8]==board[5]==p2):
        print('player 2 wins')
    elif (board[1]==board[2]==board[3]==p2):
        print('player 2 wins')
    elif (board[1]==board[4]==board[7]==p2):
        print('player 2 wins')
    elif (board[2]==board[5]==board[8]==p2):
        print('player 2 wins')
    elif (board[3]==board[6]==board[9]==p2):
        print('player 2 wins')
    elif (board[1]==board[5]==board[9]==p2):
        print('player 2 wins')
    elif (board[7]==board[5]==board[3]==p2):
        print('player 2 wins')
 
def checktie(board):
    for i in range(1,10):
        if space(board,i):
            return False
    return True

def space(board,position):
    return board[position]==' '

def take_first():
    q=random.randint(0,1)
    if q==0:
        return 'p1'
    else :
        return 'p2'

def player_choice(board):
    position=0
    while position not in range(1,10) or not space(board,position):
        position =int(input('Choose position:(1-9)'))
    return position

def replay():
    choice=input(" play again")
    return choice=='Y'



while True:
    theBoard = [' '] * 10
    p1,p2 = player()
    turn = take_first()
    
    print(turn + ' will go first.')
    
    play_game = input('Are you ready to play? Enter Yes or No.')
    
    if play_game.lower()[0] == 'y':
        game_on = True
    else:
        game_on = False

    while game_on:
        if turn == 'p1':
            
            my_board(theBoard)
            position = player_choice(theBoard)
            place(theBoard, p1, position)

            if checkwin(theBoard, p1):
                my_board(theBoard)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if checktie(theBoard):
                    my_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'p2'

        else:
            
            
            my_board(theBoard)
            position = player_choice(theBoard)
            place(theBoard, p2, position)

            if checkwin(theBoard, p2):
                my_board(theBoard)
                print('Player 2 has won!')
                game_on = False
            else:
                if checktie(theBoard):
                    my_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'p1'

    if not replay():
        break
